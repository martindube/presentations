#
server {
    listen 80;
    server_name  0.0.0.0;
    root         /var/www/htdocs;

    limit_conn conn 1;
    limit_req zone=req burst=10 nodelay;

    # Allow access to domain names only
    #if ($host !~ ^(obsdhs|obsdhs.hf)$ ) { 
    #    return 444;
    #} 

    # Only allow these request methods 
    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 404;
    }

    # Deny certain Referers
    if ( $http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) ){
        # return 404;
        return 403;
    }

    # Stop deep linking or hot linking
    location /images/ {
       valid_referers none blocked www.example1.com www.example2.com;
       if ($invalid_referer) {
          return 403;
       }
    }

    location / {
        index index.html;
    }

    fastcgi_intercept_errors on;

    # Challenge #1
    location ~ ^/chal01/(?<target>[a-zA-Z0-9]+\.php) {
        root            /var/www;
        fastcgi_pass   unix:/htdocs/chal01/var/run/php-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /var/www/$target;
        include        fastcgi_params;
    }
    location ~ ^/chal01/(?<target>[a-zA-Z0-9\.]+$) {
        alias   /var/www/htdocs/chal01/var/www/$target;
        index index.php;
    }

    # Challenge #2
    location ~ ^/chal02/(?<target>[a-zA-Z0-9]+\.php) {
        root            /var/www;
        fastcgi_pass   unix:/htdocs/chal02/var/run/php-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /var/www/$target;
        include        fastcgi_params;
    }
    location ~ ^/chal02/(?<target>[a-zA-Z0-9\.]+$) {
        alias   /var/www/htdocs/chal02/var/www/$target;
        index index.php;
    }

    # Turn on stats
    # Allow only from 1 IP.
    location /status {
        stub_status on;
        access_log   off;
        allow 192.168.56.1/32;
        deny all;
    }

    # Protect the admin section
    # Set password with: htpasswd -c /var/www/conf/.htpasswd mdube
    location ~ /admin/*|wp-admin* {
        auth_basic  "Restricted";
        auth_basic_user_file   /var/www/conf/.htpasswd;
    }

    error_page  404              /404.html;
    location = /404.html {
        root   /var/www/htdocs;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /var/www/htdocs;
    }

    location ~ /\.ht {
        deny  all;
    }
}

## Just an example of secure TLS implementation
#server {
#    listen       443;
#
#    # Enable HSTS
#    add_header Strict-Transport-Security "max-age=2678400; includeSubdomains;";
#
#    ssl                  on;
#    ssl_certificate      /etc/ssl/srv.https.scoreboard.crt;
#    ssl_certificate_key  /etc/ssl/srv.https.scoreboard.key;
#
#    ssl_session_timeout  5m;
#    ssl_session_cache    shared:SSL:10m;
#
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#
#    # Enable Perfect Forward Secrecy (PFS)
#    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#
#    #ssl_prefer_server_ciphers   on;
#
#}

